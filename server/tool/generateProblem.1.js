const Model = require('../db/sequelize/index.js')

const start = async function () {
  let level = await Model.Level.create({ name: '寶石挑戰', times: 5, roundProblems: 5, maxScore: 100 })
  let problem = await Model.Problem.create({ question: '趨勢科技響應政府資安人才培育政策，成立 XGen Security Lab，提供研究資安的學子一個實際試煉的場域，請問 XGen Security Lab 所提供的作業系統，不包含下列何者？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: 'Centos 6.5 & 7 (x64)', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'Ubuntu 14.04 & 16.04 (x64)', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'Windows Server 2010 Standad (x64)', currect: true }))
  await problem.addOption(await Model.Option.create({ content: 'Windows 10 Enterprise (x86 & x64)', currect: false }))
  await level.addProblem(problem)
  problem = await Model.Problem.create({ question: '趨勢科技未避免有能力的隊伍取得參與重要國際賽事的機會，卻因為資源經費不足而無法參加比賽，因此贊助學生團體參與國際賽事，請問趨勢科技所贊助的國際賽為？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: 'DEFCON', currect: true }))
  await problem.addOption(await Model.Option.create({ content: 'SITCON', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'ACM-ICPC', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'IMC', currect: false }))
  await level.addProblem(problem)
  problem = await Model.Problem.create({ question: '趨勢科技前瞻威脅研究團隊在《變臉詐騙 (BEC)技巧發展趨勢追蹤〉一文中指出，在 2017 年中， 7 月至 9 月當中，網路釣魚變臉詐騙的數量遠超過惡意程式的數量，其可能原因為何？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: '網站越做越逼真', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '犯罪集團掌握人類追求物慾的心理', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '啟用電子郵件資料回報功能的消費者增', currect: true }))
  await problem.addOption(await Model.Option.create({ content: '線上購物與電子商務發展蓬勃', currect: false }))
  await level.addProblem(problem)
  problem = await Model.Problem.create({ question: '趨勢科技響應政府資安人才培育政策，成立 XGen Security Lab，提供研究資安的學子一個實際試煉的場域，請問下列有關 XGen Security Lab 的敘述，何者錯誤？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: '不僅限於學生，高中職（含）以上教師也可以申請', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '為了讓學子們可以盡情地蒐集資料，Lab 內的研究環境提供對外的網際網路連線', currect: true }))
  await problem.addOption(await Model.Option.create({ content: '提供最近六個月內常見的各形態病毒樣本', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '以日為單位，每次最多可申請連續五日', currect: false }))
  await level.addProblem(problem)
  problem = await Model.Problem.create({ question: '趨勢科技經營了資安趨勢部落格，分享許多資安資訊，請問何者不為資安趨勢部落格網頁上方所提供個文章分類？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: 'IoT 物聯網', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '釣漁網站分析', currect: true }))
  await problem.addOption(await Model.Option.create({ content: 'APT 攻擊', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '企業資安', currect: false }))
  await level.addProblem(problem)
  problem = await Model.Problem.create({ question: '趨勢科技將 AI 技術廣泛應用在其產品上，請推測下列何者非趨勢科技所應用的 AI 技術？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: 'SVM', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'Deep Learning', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'Markov', currect: false }))
  await problem.addOption(await Model.Option.create({ content: 'BFS', currect: true }))
  await level.addProblem(problem)
  problem = await Model.Problem.create({ question: '趨勢科技作為跨國的資安公司，請問其全球總部位於何處？', sponsor: 'trendmicro' })
  await problem.addOption(await Model.Option.create({ content: '臺灣臺北市', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '美國矽谷', currect: false }))
  await problem.addOption(await Model.Option.create({ content: '日本東京', currect: true }))
  await problem.addOption(await Model.Option.create({ content: '美國加州 ', currect: false }))
  await level.addProblem(problem)

  process.exit(1)
}

start()
